apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-controllers
  namespace: {{ .Release.Namespace }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-controllers
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs/status", "jobs/finalizers"]
    verbs: ["update", "patch"]
  - apiGroups: ["bus.volcano.sh"]
    resources: ["commands"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "watch", "update", "bind", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups", "queues", "queues/status"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "create"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-controllers-role
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-controllers
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-controllers
  apiGroup: rbac.authorization.k8s.io

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-controllers
  namespace: {{ .Release.Namespace }}
  labels:
    app: volcano-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volcano-controller
  template:
    metadata:
      labels:
        app: volcano-controller
    spec:
      nodeSelector:
        masterselector: dls-master-node
      serviceAccount: {{ .Release.Name }}-controllers
      {{- if .Values.basic.image_pull_secret }}
      imagePullSecrets:
          - name: {{ .Values.basic.image_pull_secret }}
      {{- end }}
      containers:
          - name: {{ .Release.Name }}-controllers
            image: {{.Values.basic.controller_image_name}}:{{.Values.basic.image_tag_version}}
            imagePullPolicy: "IfNotPresent"
            command: [ "/bin/ash" ]
            args: [ "-c", "umask 027;/vc-controller-manager
                    --logtostderr=false --log_dir=/var/log/ --log_file=/var/log/volcano-controller.log -v=4 2>&1" ]
            resources:
              requests:
                memory: 300Mi
                cpu: 500m
              limits:
                memory: 300Mi
                cpu: 500m
            volumeMounts:
              - name: device-volcanocontroller
                mountPath: /var/log
              - name: localtime
                mountPath: /etc/localtime
      volumes:
          - name: device-volcanocontroller
            hostPath:
              path: /var/log/atlas_dls/volcano-controller
          - name: localtime
            hostPath:
              path: /etc/localtime

